#!/bin/sh

repo=$(gh repo set-default --view)
basename=$(basename -- "$0")
if [ "$basename" = ghp ]
then
    type="pr"
else
    type="issue"
fi
view_command_template=$(
	cat <<-"EOF"
		number={1}
		number=${number:1}
		NO_COLOR=1 GH_FORCE_TTY=$FZF_PREVIEW_COLUMNS gh <type> view --<action> $number
	EOF
)
view_command_template=${view_command_template//<type>/$type}
preview_command=${view_command_template//<action>/comments}
open_in_web_command=${view_command_template//<action>/web}
formatted_lines_jq_query=$(
	cat <<-"EOF"
		"\u001b[" as $csi |
		"31" as $red |
		"32" as $green |
		"35" as $magenta |
		"39" as $reset |
		.[] |
		(.id | startswith("I")) as $is_issue |
		(
			if .state == "OPEN"
			then
				$green
			else
				(
					if $is_issue or .state == "MERGED"
					then
						$magenta
					else
						$red
					end
				)
			end
		) as $color |
		"\($csi)\($color)m#\(.number)\($csi)\($reset)m \(.title)"
	EOF
)
list_command=$(
	cat <<-"EOF"
		query={q}
		gh <type> list \
		    --state=all \
		    --limit=100 \
		    --json=number,title,state,id \
		    ${query:+--search="$query"} \
		    --jq=<jq_query>
	EOF
)
list_command=${list_command//<type>/$type}
list_command=${list_command//<jq_query>/${formatted_lines_jq_query@Q}}
set_title_command=$(
	cat <<-"EOF"
		title=<repo>" <type> "{..}
		title=${title//$'\a'/}
		title=${title//$'\e\\'/}
		printf '\e]2;%s\a' "$title" > /dev/tty
	EOF
)
set_title_command=${set_title_command//<type>/$type}
set_title_command=${set_title_command//<repo>/${repo@Q}}
fzf --disabled \
    --ansi \
    --preview="$preview_command" \
    --bind="start,enter:reload($list_command)+first" \
    --bind="ctrl-space:execute-silent($open_in_web_command)" \
    --bind="focus:execute-silent($set_title_command)"
