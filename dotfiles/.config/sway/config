set $super Mod4
font pango:Victor Mono 9

# export environment
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP
exec hash dbus-update-activation-environment 2>/dev/null && dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP

# gtk
exec ~/.config/sway/import-gsettings

# eww
exec eww daemon

# foot server
exec foot --server

# start XDG autostart .desktop files
exec --no-startup-id dex --autostart --environment sway

# use pactl to adjust volume in PulseAudio
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +1%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -1%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

# use playerctl to control media playback
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# scratchpad control
bindsym $super+Semicolon scratchpad show
bindsym $super+Shift+Semicolon move container to scratchpad

# use mouse+$super to drag floating windows to their wanted position
floating_modifier $super

# prev/next workspace keybinds
bindsym $super+Page_Down workspace prev
bindsym $super+Page_Up workspace next
bindsym Shift+Control+Alt+Page_Down workspace prev
bindsym Shift+Control+Alt+Page_Up workspace next

# lock the system
bindsym $super+Control+l exec swaylock -c 000000 --font "Victor Mono"

# start a terminal
bindsym $super+Return exec footclient

# search with firefox
bindsym $super+s exec query=$(rofi -dmenu -l 0 -p search) && firefox --search "$query"

# decode qrcode
bindsym $super+q exec decode-qrcode-on-screen.sh | wl-copy
bindsym $super+Alt+q exec add-totp-method-from-current-screen.sh

# kill focused window
bindsym $super+Shift+q kill

# SIGKILL focused window
bindsym $super+Shift+t exec wkill.sh

# take a rectangular screenshot
bindsym $super+Shift+s exec grimshot-imgur.sh save area

# take a fullscreen screenshot
bindsym $super+Shift+o exec grimshot-imgur.sh save output

# mc
bindsym $super+m exec open-mc-mod-configuration.sh

# totp
bindsym $super+g exec totp.sh

# cmus
bindsym $super+c exec cmus-play-playlist.zsh
bindsym $super+Shift+c exec song="music/$(find ~/music -type f -name '*.mp3' | sed 's|^/home/.*/music/\(.*\)\.mp3$|\1|' | rofi -theme-str 'window {width: 800;}' -i -dmenu).mp3" && cmus-remote --file "$song"

# twitch
bindsym $super+t exec twitch.sh

# nmcli
bindsym $super+n exec switch-connection.sh

# rofi
bindsym $super+d exec rofi -show drun

# change focus
bindsym $super+h focus left
bindsym $super+j focus down
bindsym $super+k focus up
bindsym $super+l focus right
bindsym $super+Left focus left
bindsym $super+Down focus down
bindsym $super+Up focus up
bindsym $super+Right focus right
bindgesture swipe:3:left focus right
bindgesture swipe:3:down focus up
bindgesture swipe:3:up focus down
bindgesture swipe:3:right focus left
bindgesture swipe:4:left workspace next
bindgesture swipe:4:right workspace prev

# move focused window
bindsym $super+Shift+h move left
bindsym $super+Shift+j move down
bindsym $super+Shift+k move up
bindsym $super+Shift+l move right
bindsym $super+Shift+Left move left
bindsym $super+Shift+Down move down
bindsym $super+Shift+Up move up
bindsym $super+Shift+Right move right

# split in horizontal orientation
bindsym $super+b split h

# split in vertical orientation
bindsym $super+v split v

# enter fullscreen mode for the focused container
bindsym $super+f fullscreen toggle

# change container layout
bindsym $super+w layout tabbed
bindsym $super+e layout toggle split

# toggle tiling / floating
bindsym $super+Shift+Space floating toggle

# change focus between tiling / floating windows
bindsym $super+Space focus mode_toggle

# focus the parent container
bindsym $super+a focus parent

# focus the child container
bindsym $super+Shift+a focus child

# workspace names
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $super+1 workspace number $ws1
bindsym $super+2 workspace number $ws2
bindsym $super+3 workspace number $ws3
bindsym $super+4 workspace number $ws4
bindsym $super+5 workspace number $ws5
bindsym $super+6 workspace number $ws6
bindsym $super+7 workspace number $ws7
bindsym $super+8 workspace number $ws8
bindsym $super+9 workspace number $ws9
bindsym $super+0 workspace number $ws10

# move focused container to workspace
bindsym $super+Alt+1 move container to workspace number $ws1
bindsym $super+Alt+2 move container to workspace number $ws2
bindsym $super+Alt+3 move container to workspace number $ws3
bindsym $super+Alt+4 move container to workspace number $ws4
bindsym $super+Alt+5 move container to workspace number $ws5
bindsym $super+Alt+6 move container to workspace number $ws6
bindsym $super+Alt+7 move container to workspace number $ws7
bindsym $super+Alt+8 move container to workspace number $ws8
bindsym $super+Alt+9 move container to workspace number $ws9
bindsym $super+Alt+0 move container to workspace number $ws10

# focus container by its index in its parent
bindsym $super+Shift+1 exec swaymsg [con_id = $(swaymsg -t get_tree | jq '.nodes | recurse(.[].nodes) | select(any(.focused? == true)) | .[0].id // "__focused__"')] focus
bindsym $super+Shift+2 exec swaymsg [con_id = $(swaymsg -t get_tree | jq '.nodes | recurse(.[].nodes) | select(any(.focused? == true)) | .[1].id // "__focused__"')] focus
bindsym $super+Shift+3 exec swaymsg [con_id = $(swaymsg -t get_tree | jq '.nodes | recurse(.[].nodes) | select(any(.focused? == true)) | .[2].id // "__focused__"')] focus
bindsym $super+Shift+4 exec swaymsg [con_id = $(swaymsg -t get_tree | jq '.nodes | recurse(.[].nodes) | select(any(.focused? == true)) | .[3].id // "__focused__"')] focus
bindsym $super+Shift+5 exec swaymsg [con_id = $(swaymsg -t get_tree | jq '.nodes | recurse(.[].nodes) | select(any(.focused? == true)) | .[4].id // "__focused__"')] focus
bindsym $super+Shift+6 exec swaymsg [con_id = $(swaymsg -t get_tree | jq '.nodes | recurse(.[].nodes) | select(any(.focused? == true)) | .[5].id // "__focused__"')] focus
bindsym $super+Shift+7 exec swaymsg [con_id = $(swaymsg -t get_tree | jq '.nodes | recurse(.[].nodes) | select(any(.focused? == true)) | .[6].id // "__focused__"')] focus
bindsym $super+Shift+8 exec swaymsg [con_id = $(swaymsg -t get_tree | jq '.nodes | recurse(.[].nodes) | select(any(.focused? == true)) | .[7].id // "__focused__"')] focus
bindsym $super+Shift+9 exec swaymsg [con_id = $(swaymsg -t get_tree | jq '.nodes | recurse(.[].nodes) | select(any(.focused? == true)) | .[8].id // "__focused__"')] focus
bindsym $super+Shift+0 exec swaymsg [con_id = $(swaymsg -t get_tree | jq '.nodes | recurse(.[].nodes) | select(any(.focused? == true)) | .[9].id // "__focused__"')] focus

# reload the configuration file
bindsym $super+Alt+c reload

# restart sway inplace
bindsym $super+Shift+r restart

# exit sway
bindsym $super+Shift+e exec "swaynag --font 'Victor Mono' -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your session.' -B 'Yes, exit sway' 'swaymsg exit'"

# resize window
mode "resize"
{
	bindsym h resize shrink width 10 px or 10 ppt
	bindsym j resize shrink height 10 px or 10 ppt
	bindsym k resize grow height 10 px or 10 ppt
	bindsym l resize grow width 10 px or 10 ppt
	bindsym Left resize shrink width 10 px or 10 ppt
	bindsym Up resize grow height 10 px or 10 ppt
	bindsym Down resize shrink height 10 px or 10 ppt
	bindsym Right resize grow width 10 px or 10 ppt
	bindsym Return mode "default"
	bindsym Escape mode "default"
	bindsym $super+r mode "default"
}
bindsym $super+r mode "resize"

# toggle border style
bindsym $super+Shift+b border toggle

# colors
client.focused          #cdd6f4 #000000 #cdd6f4 #cdd6f4 #cdd6f4
client.unfocused        #313244 #000000 #cdd6f4 #313244 #313244
client.focused_inactive #585b70 #000000 #cdd6f4 #585b70 #585b70

# include device specific configuration and overrides
include device/*

# rules
for_window [all] title_format %title (<i>%shell</i>)
for_window [app_id="mpv"] border pixel 1
for_window [title="Authentication required"] floating enable

# various
default_border normal 1
titlebar_padding 4 4
focus_follows_mouse no
smart_borders on
tiling_drag off
focus_on_window_activation none
focus_wrapping no
